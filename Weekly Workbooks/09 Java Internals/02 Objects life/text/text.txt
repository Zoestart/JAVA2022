Concepts: overloading, references, reference equality, equals, this, null, the heap, arrays, object scope, instance persistence, call-by-reference, call-by-value

This week's and next week's lectures will be in the traditional long form. For Object's life, there will be a lot of revision, we're going to be covering the life cycle of objects and we're going to be focusing on the heap and the stack. We think this stuff is really important because if you understand where objects reside in memory and where references reside and the relevance of the stack and the heap, it will make you more efficient programmers that are less prone to bugs and when you do have bugs, you'll be able to track them down more easily. Furthermore, understanding these concepts is vital for understanding the rest of this and next week's materials.
